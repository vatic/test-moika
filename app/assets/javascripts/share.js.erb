var myMap,
  cw_list = [],
  geo_objects_ary = [];


/* Objects shared over application
/* Day Name Strings */
 var  ru_Date =
  {
    dayNames: ["воскресенье", "понедельник", "вторник", "среда", "четверг", "пятница", "суббота"],
    abbreviatedDayNames: ["Вс", "Пн", "Вт", "Ср", "Чт", "Пт", "Сб"],
    shortestDayNames: ["Вс", "Пн", "Вт", "Ср", "Чт", "Пт", "Сб"],
    firstLetterDayNames: ["В", "П", "В", "С", "Ч", "П", "С"],

    /* Month Name Strings */
    monthNames: ["января", "февраля", "марта", "апреля", "мая", "июня", "июля", "августа", "сентября", "октября", "ноябрь", "декабря"],
    abbreviatedMonthNames: ["янв", "фев", "мар", "апр", "май", "июн", "июл", "авг", "сен", "окт", "ноя", "дек"]
  };

  var trafficText =
  [
    "Дороги свободны",
    "Дороги почти свободны",
    "Местами затруднения",
    "Местами затруднения",
    "Движение плотное",
    "Движение затрудненное",
    "Серьезные пробки",
    "Многокилометровые пробки",
    "Город стоит",
    "Лучше ехать на метро"
  ];

  var declensionBall =
  [
    "балл",
    "балла",
    "балла",
    "балла",
    "баллов",
    "баллов",
    "баллов",
    "баллов",
    "баллов",
    "баллов",
  ];

function updateTraffic() {
  trafficProvider.update();
  //console.log(trafficProvider.state.get('level'));
  var level = trafficProvider.state.get('level');
  if (level === undefined) {
    return false;
  }
  if (level < 4) {
    $('#traffic .svetofor').removeClass('traffic_undefined');
    $('#traffic .svetofor').addClass('traffic_green');
  } else if (level < 7) {
    $('#traffic .svetofor').removeClass('traffic_undefined');
    $('#traffic .svetofor').addClass('traffic_yellow');
  } else {
    $('#traffic .svetofor').removeClass('traffic_undefined');
    $('#traffic .svetofor').addClass('traffic_red');
  }

  $('#traffic #level_digit').html( level );
  $('#traffic #level_text').html( declensionBall[level-1]);
  $('#traffic #level_desc').html( trafficText[level-1]);
}

function init(){

  console.log('map init');

    myMap = window.map = new ymaps.Map ("map", {
        center: [55.76, 37.64],
        zoom: 11,
    });
    trafficControl = new ymaps.control.TrafficControl({providerKey: 'traffic#actual', shown: true});
    trafficProvider = trafficControl.getProvider('traffic#actual');
    myMap.controls
        // Кнопка изменения масштаба.
        .add('zoomControl', { left: 5, top: 5 })
        // Список типов карты
        .add('typeSelector')
        // Стандартный набор кнопок
        .add('mapTools', { left: 35, top: 5 })
        .add('routeEditor', { left: 130, top: 5 })
        .add(trafficControl)
        //.add('searchControl', { left: 180, top: 5 })
        ;

    searchControl = new SearchAddress(myMap, $('#map_search form'));
    clusterer = new ymaps.Clusterer({
      preset: 'twirl#invertedVioletClusterIcons',
      groupByCoordinates: false,
      clusterDisableClickZoom: false,
      minClusterSize: 3,
      gridSize: 80
      })

    ymaps.option.presetStorage.add('my#red_blink', {
    iconImageHref: "<%= asset_path('red_bl.gif') %>"  });
    ymaps.option.presetStorage.add('my#green_blink', {
    iconImageHref: "<%= asset_path('green_bl.gif') %>"  });
    ymaps.option.presetStorage.add('my#red_not_blink', {
    //iconImageHref: "<%= asset_path('red_led.png') %>"  });
    iconImageHref: "<%= asset_path('Award-star-gold-3d_35.png') %>"  });
    ymaps.option.presetStorage.add('my#green_not_blink', {
    //iconImageHref: "<%= asset_path('green_led.png') %>"  });
    iconImageHref: "<%= asset_path('christmas_star_35.png') %>"  });

    ymaps.option.presetStorage.add('my#videoned', {
    iconImageHref: "<%= asset_path('ru_star_35.png') %>"  });


    myMap.behaviors.enable('scrollZoom');

    var myBalloonContentBodyLayout = ymaps.templateLayoutFactory.createClass(
                    '<div>$[properties.body]</div>'
                );

    greenCollection = new ymaps.GeoObjectCollection({}, {
        preset: 'my#green_not_blink',
        //preset: 'twirl#greenDotIcon',
        //iconImageSize: [20, 20]
        iconImageSize: [35, 35]
    });

    redCollection = new ymaps.GeoObjectCollection({}, {
        preset: 'my#red_not_blink',
        //iconImageSize: [20, 20]
        iconImageSize: [35, 35]
    });

    greenBlinkCollection = new ymaps.GeoObjectCollection({}, {
        preset: 'my#green_blink',
        iconImageSize: [20, 20]
    });

    redBlinkCollection = new ymaps.GeoObjectCollection({}, {
        preset: 'my#red_blink',
        iconImageSize: [20, 20]
    });

    videonedCollection = new ymaps.GeoObjectCollection({}, {
        preset: 'my#videoned',
        //preset: 'twirl#redDotIcon',
        iconImageSize: [35, 35]
    });

    if (cw_list !== null && cw_list !== undefined) {
      cw_list.forEach(function (car_wash) {


        var myBalloonBody = balloon(car_wash);
        var myHintContent = hint(car_wash);

        var coordinates = car_wash.coords,
          properties = {
            body: myBalloonBody,
            hintContent: myHintContent,
            car_wash_id: car_wash.id
          },
          options = {
            balloonContentBodyLayout : myBalloonContentBodyLayout,
            preset: (car_wash.signal) ?
              ('my#green'):
              ('my#red'),
            //iconImageSize: [20, 20]
          },
          placemark = new ymaps.Placemark(coordinates, properties, options);


        if (car_wash.signal) {
          if (car_wash.blink) {
            greenBlinkCollection.add(placemark)
          }
          else {
            greenCollection.add(placemark)
          }
        }
        else {
          if (car_wash.blink) {
            redBlinkCollection.add(placemark)
          }
          else {
            if (car_wash.videoned) {
              videonedCollection.add(placemark);
              console.log(car_wash)
            }
            else {
              redCollection.add(placemark)
            }
          }
        }
      //(car_wash.signal) ? ( greenCollection.add(placemark) ):( redCollection.add(placemark) );
      geo_objects_ary.push(placemark);
    });
    }



      myMap.geoObjects.add(greenCollection);
      myMap.geoObjects.add(redCollection);
      myMap.geoObjects.add(greenBlinkCollection);
      myMap.geoObjects.add(redBlinkCollection);
      myMap.geoObjects.add(videonedCollection);

      myMap.storage = ymaps.geoQuery(myMap.geoObjects);
      //clusterer.add(geo_objects_ary);
      //myMap.geoObjects.add(clusterer);
}


$(document).ready(function() {
  setInterval(function() {
  var date_now = new Date();
  $(".datetime .date").html(
    ru_Date.abbreviatedDayNames[date_now.getDay()] +
    ' ' +
    date_now.getDate() +
    ' ' +
    ru_Date.monthNames[date_now.getMonth()] +
    ' ' +
    date_now.getFullYear() +
    ' г.'
    );
  $(".datetime .time").html(
    ' | ' +
    date_now.toLocaleTimeString() +
    ' | '
    );
  },500)


  var url = "http://api.worldweatheronline.com/free/v1/weather.ashx?q=Moscow&format=json&num_of_days=1&date=today&fx=no&cc=yes&key=2rcm7aauw65cverta3rnvf3j";
  $.get(url, function(data) {
    $('#weather #deg').html(data.data.current_condition[0].temp_C + '&deg;C')
  }, 'jsonp');

  if ( $('#car_wash_name').length > 0 ) {
    $('#map').hide();
    console.log('hide');
    ymaps.ready(init);
    window.setInterval(updateTraffic,1*10*1000)
  }
  else {
  }

  //trafficControl = new ymaps.control.TrafficControl({providerKey: 'traffic#actual', shown: true});
  //trafficProvider = trafficControl.getProvider('traffic#actual');

});

function log (argument) {
  console.log(argument)
}

function hint(car_wash) {
  var timeNow = new Date;
  var wrapper_begin = '<div class="hint">'
  var wrapper_end = '</div>'
  var part1 = '<h3>' 
      + car_wash.title.toUpperCase() 
      + '</h3>'
      + '<h5 class="address">'
      + 'Адрес: ' + car_wash.address 
      + '</h5>'
      + '<h3 class="time">'
      + 'Время:  ' + timeNow.toLocaleTimeString() 
      + '</h3>'
      + (car_wash.main_action == null ? '' : '<h3 class="red">' + car_wash.main_action + '</h3>');
  var part3 = '<img src="';
  var part4 = '">';
  if (car_wash.signal) {
    var ret = wrapper_begin + part1 + part3 + "<%= asset_path('green.png') %>" + part4 + '<span class="green">Свободно</span>' + wrapper_end;
  } else {
    ret = wrapper_begin + part1 + part3 + "<%= asset_path('red.png') %>" + part4 + '<span class="red">Занято</span>' +  wrapper_end;
  }
  return ret;
    
}

function balloon(car_wash) {
  var wrapper_begin = '<div class="balloon">';
  var wrapper_end = '</div>';
  var part1 =
      '<h3>'
      + car_wash.title
      + '</h3>'
      + '<h5 class="address">'
      + 'Адрес: ' + car_wash.address
      + '</h5>'
      + '<h3 class="phone">'
      + 'Телефон: ' + car_wash.contacts
      + '</h3>'
      + '<h5 class="services">'
      + car_wash.services
      + '</h5>'
      + (car_wash.main_action == null ? '' : '<h3 class="red">' + car_wash.main_action + '</h3>');

  if (car_wash.signal) {
    var ret = wrapper_begin + part1
      + '<img src="'
      + "<%= asset_path('green.png') %>"
      + '">'
      + '<span class="green">Свободно</span>'
      + '<br/>'
      + '<a href="'
      + car_wash.url
      + '">Перейти на страницу этой мойки</a>' + wrapper_end;
  } else {
    var ret = wrapper_begin + part1
      + '<img src="'
      + "<%= asset_path('red.png') %>"
      + '">'
      + '<span class="red">Занято</span>'
      + '<br/>'
      + '<a href="'
      + car_wash.url
      + '">Перейти на страницу этой мойки</a>'+ wrapper_end;
  }
  return ret;
}

$(document).ready(function() {
  $('input[type="checkbox"]#agreement').change(function() {
    if ($('input[type="checkbox"]#agreement').prop('checked')) {
      $('input[type="submit"]').prop('disabled',false);
    }
    else {
      $('input[type="submit"]').prop('disabled',true);
    }
  })
});
